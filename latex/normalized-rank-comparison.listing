	display("N is odd then,")
	
	a = (n - 1)/2
	s_udh = n*(n+1)/2 - a*(a+1)/2
	display("S_UDH = ",simplify(s_udh))
	
	p_i = w_i * sigma_r_j / s_udh
	display("p_i_normalized = ", simplify(p_i))
	
	p_i_min = p_i.subs({n_i:1}) # number of elements = 1
	p_i_min = p_i_min.doit()
	p_i_min = p_i_min.subs({r[1]:1}) # containing one element rank = 1
	display("p_i_minima_non-normalized = ",simplify(p_i_min))
	
	p_i_max = p_i.subs({n_i:1}) # number of elements = 1
	p_i_max = p_i_max.doit()
	p_i_max = p_i_max.subs({r[1]:n}) # containing one element rank = Nth
	display("p_i_maxima_non-normalized = ",simplify(p_i_max))
	
	P_i = (p_i - p_i_min)/(p_i_max - p_i_min)
	display("Normalized Performance Measure, P_i = ", factor(simplify(P_i)))
